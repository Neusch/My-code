This program can be compiled by using make or make all. It can then delete the executable and object files using make clean. To run the program, use:
./banhammer followed by whatever specifiers you would like and/or <File_Name.txt to place a specific file into standard input to be read from.

This program is going to take in a file and read through it while looking for a specified list of bad words. These bad words are recorded and then printed out at the end with an error message if any were found. Some of the bad words have translations and are printed out with their translated form, and some of these words do not have translations and will result in the user being sent to joycamp. 
The program starts by using a getopt command that takes in certain specifiers that will change how the program is run. -s specifies statistics for the program, -m specifies the move to front rule when you call find linked list, -b turns off that rule, -h controls the size of the hash table, and -f sets the size of the bloom filter. After this, two bloom filters and a hash table are declared. Both of these data structures use a hash function that was provided by Professor Long. The program reads two files and each word found in these files is hashed and hen put into the bloom filters and hash tables. The bloom filter is similar to a bit vector and sets specific bits based on the return value of the hash function. This happens for both bloom filters with different salt values so that the bloom filters are different. The hash function also gets used for the hash table where the words from these files get hashed and then that index in the hash table is made into a linked list containing the words found in the files. A flex file is used to read from standard input and each word is hashed and checked against both bloom filters and if passes both of the bloom filters it is looked for in the hash table and if it is found there then it gets stored away. After this file is completely done being looked through, a check is made for stats and if they are set on, then only the stats are printed out. If the stats are off then another check is made to see if any of the words that were found have translations or not. If they do not have translations, then a prompt is printed that tells the user they are off to joycamp along with all of the badwords that were found in the file, including the words with translations. If all of the words found have translations, then a prompt that tells them to change their words is printed along with all of the bad words and their translations. If no words were found then nothing is printed. Finally, all of the linked lists, bloom filters, hash tables, and other variables are freed of their allocated memory. 

This program has memory leaks because of the flex file, but so does Professor Long's program so I did not think that it would be bad